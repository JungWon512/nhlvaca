<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.auc.main.service.Impl.CommonMapper">
    <!-- 경매일자 -->
    <select id="Common_selAucDt" resultType="hashMap">
        SELECT NVL(
               NVL(
		<choose>
			<when test="flag != null and flag == 'init'.toString()">
				(
					SELECT MIN(AUC_DT)							/* 경매일자             */
                      FROM TB_LA_IS_MH_AUC_QCN
                     WHERE NA_BZPLC    = #{ss_na_bzplc}			/* 경제통합사업장코드 */
                       AND DDL_YN      = '0'
					<choose>
					<!-- 축종 구분코드가 '01'이 아닌 경우 일괄 조회 X -->
					<when test='!"01".equals(sra_srs_dsc)'>
					   AND AUC_OBJ_DSC = #{auc_obj_dsc}
					</when>
					<otherwise>
					   AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc})	/* 경매대상구분코드   */
					</otherwise>
					</choose>
					   <!-- AND (
							(#{auc_obj_dsc} IN ('0', '1', '2', '3') AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc}))
							OR
							(#{auc_obj_dsc} NOT IN ( '0', '1', '2', '3' ) AND AUC_OBJ_DSC = #{auc_obj_dsc})	/* 경매대상구분코드   */
						) -->
				),
				(
					SELECT MAX(AUC_DT)                     /* 경매일자             */
                      FROM TB_LA_IS_MH_AUC_QCN
                     WHERE NA_BZPLC    = #{ss_na_bzplc}            /* 경제통합사업장코드 */
                       AND DDL_YN      = '1'
                    <choose>
					<when test='!"01".equals(sra_srs_dsc)'>
					   AND AUC_OBJ_DSC = #{auc_obj_dsc}
					</when>
					<otherwise>
					   AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc})	/* 경매대상구분코드   */
					</otherwise>
					</choose>
					   <!-- AND (
							(#{auc_obj_dsc} IN ('0', '1', '2', '3') AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc}))
							OR
							(#{auc_obj_dsc} NOT IN ( '0', '1', '2', '3' ) AND AUC_OBJ_DSC = #{auc_obj_dsc})	/* 경매대상구분코드   */
						) -->
				)
			</when>
			<otherwise>
				(
					SELECT AUC_DT								/* 경매일자             */
                      FROM TB_LA_IS_MH_AUC_QCN
                     WHERE NA_BZPLC    = #{ss_na_bzplc}			/* 경제통합사업장코드 */
                       AND AUC_DT = #{auc_dt}
                	<choose>
					<when test='!"01".equals(sra_srs_dsc)'>
					   AND AUC_OBJ_DSC = #{auc_obj_dsc}
					</when>
					<otherwise>
					   AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc})	/* 경매대상구분코드   */
					</otherwise>
					</choose>
				),
				(
					SELECT MAX(AUC_DT)                     /* 경매일자             */
                      FROM TB_LA_IS_MH_AUC_QCN
                     WHERE NA_BZPLC    = #{ss_na_bzplc}            /* 경제통합사업장코드 */
                    <choose>
					<when test='!"01".equals(sra_srs_dsc)'>
					   AND AUC_OBJ_DSC = #{auc_obj_dsc}
					</when>
					<otherwise>
					   AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc})	/* 경매대상구분코드   */
					</otherwise>
					</choose>
				)
			</otherwise>
		</choose>
                 )
               , TO_CHAR(SYSDATE,'YYYYMMDD')) AS AUC_DT
          FROM DUAL            
    </select>
    
    <select id="Common_selAucQcn" resultType="hashMap">
    <![CDATA[
         SELECT
              NA_BZPLC                                  /* 경제통합사업장코드        */
            , AUC_OBJ_DSC                               /* 경매대상구분코드     */
            , AUC_DT                                    /* 경매일자         */
            , QCN                                       /* 차수               */
            , BASE_LMT_AM                               /* 기초한도금액           */
            , CUT_AM                                    /* 절사단위금액           */
            , SGNO_PRC_DSC                              /* 단수처리구분코드     */
            , DDL_YN                                    /* 마감여부         */
            , DEL_YN                                    /* 삭제여부         */
            , (SELECT WM_CONCAT(AUC_OBJ_DSC) FROM  TB_LA_IS_MH_AUC_QCN WHERE NA_BZPLC = #{ss_na_bzplc} AND AUC_DT = #{auc_dt} AND AUC_OBJ_DSC NOT IN ('0', #{auc_obj_dsc})) AS OT_AUC_OBJ_DSC
        FROM  TB_LA_IS_MH_AUC_QCN
        WHERE NA_BZPLC    = #{ss_na_bzplc}              /* 경제통합사업장코드        */
    ]]>
    <choose>
        <when test='auc_obj_dsc == "" or auc_obj_dsc == null'>
            AND AUC_OBJ_DSC = '0'                       /* 경매대상구분코드     */
        </when>
        <otherwise>
            AND AUC_OBJ_DSC IN ('0', #{auc_obj_dsc})    /* 경매대상구분코드     */
        </otherwise>
    </choose>
    <![CDATA[
          AND AUC_DT      = #{auc_dt};                  /* 경매일자         */
    ]]>
    </select>
    
    
    <!-- 수의사 -->
    <select id="Common_selVet" resultType="hashMap">
    <![CDATA[
        SELECT LVST_MKT_TRPL_AMNNO
			 , BRKR_NAME
		  FROM TB_LA_IS_MM_TRPL
	     WHERE NA_BZPLC          = #{ss_na_bzplc} 
		   AND LVST_MKT_TRPL_DSC = '1'
		   AND DEL_YN            = '0'          
                               
    ]]>
    </select>
    
    <!-- 수수료부과내역삭제 -->
    <delete id="Common_delFee">
        DELETE FROM TB_LA_IS_MH_FEE_IMPS
         WHERE NA_BZPLC    = #{na_bzplc}
           AND AUC_DT      = #{auc_dt}
           AND AUC_OBJ_DSC = #{auc_obj_dsc}
           AND OSLP_NO     = #{oslp_no}
    </delete>
    <!--  수수료내역조회 -->
    <select id="Common_selFee" resultType="hashMap">
    
        SELECT
               A.NA_BZPLC                                                /* 경제통합사업장코드    */
             , A.APL_DT                                                  /* 적용일자              */
             , A.AUC_OBJ_DSC                                             /* 경매대상구분코드      */
             , A.FEE_RG_SQNO                                             /* 수수료등록일련번호    */
             , A.NA_FEE_C                                                /* 경제통합수수료코드    */
             , A.SRA_FEENM                                               /* 축산수수료명          */
             , A.JNLZ_BSN_DSC                                            /* 분개업무구분코드      */
             , A.SRA_NA_FEE_C                                            /* 축산경제통합수수료코드*/
             , A.FEE_APL_OBJ_C                                           /* 수수료적용대상코드    */
             , A.AM_RTO_DSC                                              /* 금액비율구분코드      */
             , A.SGNO_PRC_DSC                                            /* 단수처리구분코드      */
             , A.MACO_FEE_UPR                                            /* 조합원수수료단가      */
             , A.NMACO_FEE_UPR                                           /* 비조합원수수료단가    */
             , A.ANS_DSC                                                 /* 가감구분코드          */
             , A.SBID_YN                                                 /* 낙찰여부              */
             , A.PPGCOW_FEE_DSC                                          /* 번식우수수료구분코드  */
             , A.DEL_YN                                                  /* 삭제여부              */
             , A.FSRG_DTM                                                /* 최초등록일시          */
             , A.FSRGMN_ENO                                              /* 최초등록자개인번호    */
             , A.LSCHG_DTM                                               /* 최종변경일시          */
             , A.LS_CMENO                                                /* 최종변경자개인번호    */
             , 0 AS SRA_TR_FEE                                           /* 축산거래수수료        */
          FROM TB_LA_IS_MH_FEE A
         WHERE A.NA_BZPLC    = #{na_bzplc}                               /* 경제통합사업장코드    */
        <if test='auc_obj_dsc != "0"'>
           AND A.AUC_OBJ_DSC          = #{auc_obj_dsc}
        </if> 
          AND A.APL_DT      = (SELECT MAX(APL_DT)
                               FROM  TB_LA_IS_MH_FEE
                               WHERE NA_BZPLC      = A.NA_BZPLC         /* 경제통합사업장코드     */
                                 AND AUC_OBJ_DSC   = A.AUC_OBJ_DSC      /* 경매대상구분코드       */
                                 AND APL_DT       <![CDATA[<=]]> #{auc_dt}          /* 적용일자               */
                                 AND DEL_YN        = '0')               /* 적용일자               */
          AND A.DEL_YN      = '0'                                       /* 삭제여부               */
    
    </select>
    
    <!-- 임신우 구분조회 -->
    <select id="Common_selPpgcowFeeDsc" resultType="hashMap">
    <![CDATA[
        SELECT A.PPGCOW_FEE_DSC
          FROM TB_LA_IS_MH_FEE A
         WHERE A.NA_BZPLC       = #{na_bzplc}                            /* 경제통합사업장코드       */
           AND A.AUC_OBJ_DSC    = #{auc_obj_dsc}                         /* 경매대상구분코드         */
           AND A.APL_DT         = (SELECT MAX(APL_DT)
                                     FROM TB_LA_IS_MH_FEE
                                    WHERE NA_BZPLC     = #{na_bzplc}     /* 경제통합사업장코드       */
                                      AND AUC_OBJ_DSC  = #{auc_obj_dsc}  /* 경매대상구분코드         */
                                      AND APL_DT      <= #{auc_dt}       /* 적용일자                 */
                                      AND DEL_YN       = '0')
           AND A.NA_FEE_C       = #{na_fee_c}
           AND A.PPGCOW_FEE_DSC = #{ppgcow_fee_dsc}
           AND A.DEL_YN         = '0'                                    /* 삭제여부                 */
    ]]>
    </select>
    
    <!-- 수수료부과내역 등록 -->
    <insert id="Common_insFeeImps">
        insert into tb_la_is_mh_fee_imps (
               na_bzplc                    /* 경제통합사업장코드             */
             , auc_obj_dsc                 /* 경매대상구분코드               */
             , auc_dt                      /* 경매일자                       */
             , oslp_no                     /* 원표번호                       */
             , led_sqno                    /* 원장일련번호                   */
             , fee_rg_sqno                 /* 수수료등록일련번호             */
             , na_fee_c                    /* 경제통합수수료코드             */
             , apl_dt                      /* 적용일자                       */
             , fee_apl_obj_c               /* 수수료적용대상코드             */
             , ans_dsc                     /* 가감구분코드                   */
             , sbid_yn                     /* 낙찰여부                       */
             , sra_tr_fee                  /* 축산거래수수료                 */
             , tms_yn                      /* 전송여부                       */
        )values(
               #{na_bzplc}              /* 경제통합사업장코드             */
             , #{auc_obj_dsc}           /* 경매대상구분코드               */
             , #{auc_dt}                /* 경매일자                       */
             , #{oslp_no}               /* 원표번호                       */
             , 1                        /* 원장일련번호                   */
             , #{fee_rg_sqno}           /* 수수료등록일련번호             */
             , #{na_fee_c}              /* 경제통합수수료코드             */
             , #{apl_dt}                /* 적용일자                       */
             , #{fee_apl_obj_c}         /* 수수료적용대상코드             */
             , #{ans_dsc}               /* 가감구분코드                   */
             , #{sbid_yn}               /* 낙찰여부                       */
             , #{sra_tr_fee}            /* 축산거래수수료                 */
             , '0'                      /* 전송여부                       */
        )
    </insert>
    
    <select id="Common_selBack" resultType="java.util.LinkedHashMap">
        ${query_text}
    </select>
    <update id="Common_updBack">
        ${query_text}
    </update>
    <insert id="Common_insBack">
        ${query_text}
    </insert>    
    <delete id="Common_delBack">
        ${query_text}
    </delete>
    
    <insert id="Common_insDownloadLog">    
		<selectKey keyProperty="sra_opr_sqno" resultType="int" order="BEFORE">
			SELECT NVL(MAX(SRA_OPR_SQNO)+1,1) AS SRA_OPR_SQNO
			  FROM TB_LA_IS_BI_PSN_INF
			  WHERE NA_BZPLC = NVL(#{ss_na_bzplc},TRIM(LPAD('0',13,'0')))
			  AND OPR_DT = TO_CHAR(SYSDATE,'YYYYMMDD')
		</selectKey>
        insert into TB_LA_IS_BI_PSN_INF (
			NA_BZPLC
			, OPR_DT
			, SRA_OPR_SQNO 
			, PGID 
			, SRCH_CND_CNTRN 
			, INQ_CN 
			, BTN_TPC   
			, APVRQR_RSNCTT 
			, IPADR  
			, FSRG_DTM 
			, FSRGMN_ENO
        )values(
			NVL(#{ss_na_bzplc},TRIM(LPAD('0',13,'0')))
			, TO_CHAR(SYSDATE,'YYYYMMDD')
			, #{sra_opr_sqno} 
			, #{pgid}
			, #{srch_cnd_cntrn} 
			, NVL(#{inq_cn},'0') 
			, #{btn_tpc}   
			, #{apvrqr_rsnctt} 
			, #{ipadr}  
			, SYSDATE 
			, NVL(#{ss_userid},'SYSTEM')
        )
    </insert>
    
	<!-- ************************************************ 개체 등록/수정 관련 [s] ************************************************ -->
	<!-- 개체 정보 조회 -->
	<select id="common_selAmnno" resultType="hashMap">
		SELECT SRA_INDV_AMNNO
		  FROM TB_LA_IS_MM_INDV
		 WHERE NA_BZPLC				= #{ss_na_bzplc}					/* 경제통합사업장코드 */
		   AND SRA_INDV_AMNNO		= #{re_indv_no}						/* 축산개체관리번호 */
	</select>

	<!-- 개체 정보 저장 -->
	<insert id="common_insMmIndv" parameterType="hashMap">
		INSERT INTO TB_LA_IS_MM_INDV (
			  NA_BZPLC                                             /* 경제통합사업장코드                  */
			, SRA_INDV_AMNNO                                       /* 축산개체관리번호                    */
			, SRA_SRS_DSC                                          /* 축산축종구분코드                    */
			, FHS_ID_NO                                            /* 농가식별번호                        */
			, FARM_AMNNO                                           /* 농장관리번호                        */
			, BIRTH                                                /* 생년월일                            */
			, MCOW_DSC                                             /* 어미구분코드                        */
			, KPN_NO		                                       /* KPN번호                             */
			, INDV_SEX_C                                           /* 개체성별코드                        */
			, MCOW_SRA_INDV_AMNNO                                  /* 어미소축산개체관리번호              */
			, MATIME                                               /* 산차                                */
			, SRA_INDV_PASG_QCN                                    /* 축산개체계대차수                    */
			, INDV_ID_NO                                           /* 개체식별번호                        */
			, SRA_INDV_BRDSRA_RG_NO                                /* 축산개체종축등록번호                */
			, RG_DSC                                               /* 등록구분코드                        */
			, ANW_YN                                               /* 한우종합등록여부                    */
			, FSRG_DTM                                             /* 최초등록일시                        */
			, FSRGMN_ENO                                           /* 최초등록자개인번호                  */
			, LSCHG_DTM                                            /* 최종변경일시                        */
			, LS_CMENO                                             /* 최종변경자개인번호                  */
		) VALUES (
			  #{ss_na_bzplc}										/* 경제통합사업장코드                  */
			, #{re_indv_no}											/* 축산개체관리번호                    */
			, '01'													/* 축산축종구분코드                    */
			, #{fhs_id_no}											/* 농가식별번호                        */
			, #{farm_amnno}											/* 농장관리번호                        */
			<choose>
				<when test='birth == "" or birth == null'>
					, NULL
				</when>
				<otherwise>
					, #{birth}
				</otherwise>
			</choose>												/* 생년월일                            */
			, #{mcow_dsc}											/* 어미구분코드                        */
			, #{kpn_no}												/* KPN번호                             */
			, #{indv_sex_c}											/* 개체성별코드                        */
			, #{mcow_sra_indv_amnno}								/* 어미소축산개체관리번호              */
			<choose>
				<when test='matime == "" or matime == null'>
					, NULL
				</when>
				<otherwise>
					, #{matime}
				</otherwise>
			</choose>												/* 산차                                */
			, #{sra_indv_pasg_qcn}									/* 축산개체계대차수                    */
			, #{indv_id_no}											/* 개체식별번호                        */
			, #{sra_indv_brdsra_rg_no}								/* 축산개체종축등록번호                */
			, #{rg_dsc}												/* 등록구분코드                        */
			, '9'													/* 한우종합등록여부                    */
			, SYSDATE												/* 최초등록일시                        */
			, #{ss_userid}											/* 최초등록자개인번호                  */
			, SYSDATE												/* 최종변경일시                        */
			, #{ss_userid}											/* 최종변경자개인번호                  */
		)
	</insert>
	
	<!-- 개체 정보 수정 -->
	<update id="common_updMnIndv" parameterType="hashMap">
		UPDATE TB_LA_IS_MM_INDV
		   SET KPN_NO              =  #{kpn_no}
			 , FHS_ID_NO 	       =  #{fhs_id_no}
			 , FARM_AMNNO 	       =  #{farm_amnno}
			 , INDV_SEX_C          =  #{indv_sex_c}
		<choose>
		<when test='birth == "" or birth == null'>
			, BIRTH = NULL
		</when>
		<otherwise>
			, BIRTH = #{birth}
		</otherwise>
		</choose>
			 , INDV_ID_NO            =  #{indv_id_no}
			 , SRA_INDV_BRDSRA_RG_NO =  #{sra_indv_brdsra_rg_no}
		<choose>
		<when test='rg_dsc == "" or rg_dsc == null'>
			 , RG_DSC = NULL
		</when>
		<otherwise>
			 , RG_DSC = #{rg_dsc}
		</otherwise>
		</choose>
		<choose>
		<when test='mcow_dsc == "" or mcow_dsc == null'>
			 , MCOW_DSC = NULL
		</when>
		<otherwise>
			 , MCOW_DSC = #{mcow_dsc}
		</otherwise>
		</choose>
			 , MCOW_SRA_INDV_AMNNO   =  #{mcow_sra_indv_amnno}
		<choose>
		<when test='matime == "" or matime == null'>
			 , MATIME = NULL
		</when>
		<otherwise>
			 , MATIME = #{matime}
		</otherwise>
		</choose>
			 , SRA_INDV_PASG_QCN     = #{sra_indv_pasg_qcn}
		 WHERE NA_BZPLC              = #{ss_na_bzplc}
		   AND SRA_INDV_AMNNO        = #{re_indv_no}
		   AND SRA_SRS_DSC           ='01'
	</update>
	<!-- ************************************************ 개체 등록/수정 관련 [e] ************************************************ -->
	
	<!-- *************************************************** 통합회원 관련 [s] *************************************************** -->
	<!-- 통합회원정보 조회 -->
	<select id="Common_selMbintgInfo" parameterType="hashMap" resultType="hashMap">
		SELECT MB_INTG_NO
			 , MB_INTG_NM
			 , MB_RLNO
			 , OHSE_TELNO
			 , MB_MPNO
			 , DORMACC_YN
			 , DORMACC_DT
			 , DELACC_YN
			 , DELACC_DT
			 , MB_INTG_DT
			 , TMS_YN
			 , FNCON_DTM
			 , FSRG_DTM
			 , FSRGMN_ENO
			 , LSCHG_DTM
			 , LS_CMENO
			 , MB_INTG_GB
			 , DORMDUE_DT
		  FROM TB_LA_IS_MM_MBINTG
		 WHERE MB_INTG_GB = #{mb_intg_gb}
		   AND REPLACE(TRIM(MB_INTG_NM),' ','') = REPLACE(TRIM(DECODE(#{mb_intg_gb}, '01', TRIM(#{sra_mwmnnm}), TRIM(#{ftsnm}))),' ','')
		   AND REPLACE(TRIM(MB_RLNO),' ','') = DECODE(#{mb_intg_gb}, '01', REGEXP_REPLACE(TRIM(#{cus_rlno}), '[^0-9]'), REGEXP_REPLACE(TRIM(#{birth}), '[^0-9]'))
		   AND REGEXP_REPLACE(MB_MPNO, '[^0-9]') = REGEXP_REPLACE(TRIM(#{cus_mpno}), '[^0-9]')
	</select>
	<!-- 통합회원정보 조회 -->
	<select id="Common_selMbintgList" parameterType="hashMap" resultType="hashMap">
		SELECT MB_INTG_NO
			 , MB_INTG_NM
			 , MB_RLNO
			 , OHSE_TELNO
			 , MB_MPNO
			 , DORMACC_YN
			 , DORMACC_DT
			 , DELACC_YN
			 , DELACC_DT
			 , MB_INTG_DT
			 , TMS_YN
			 , FNCON_DTM
			 , FSRG_DTM
			 , FSRGMN_ENO
			 , LSCHG_DTM
			 , LS_CMENO
			 , MB_INTG_GB
			 , DORMDUE_DT
		  FROM TB_LA_IS_MM_MBINTG
		 WHERE MB_INTG_GB = #{mb_intg_gb}
		   AND REPLACE(TRIM(MB_INTG_NM),' ','') = REPLACE(TRIM(DECODE(#{mb_intg_gb}, '01', TRIM(#{sra_mwmnnm}), TRIM(#{ftsnm}))),' ','')
		   AND REPLACE(TRIM(MB_RLNO),' ','') = DECODE(#{mb_intg_gb}, '01', REGEXP_REPLACE(TRIM(#{cus_rlno}), '[^0-9]'), REGEXP_REPLACE(TRIM(#{birth}), '[^0-9]'))
		   AND REGEXP_REPLACE(MB_MPNO, '[^0-9]') = REGEXP_REPLACE(TRIM(#{cus_mpno}), '[^0-9]')
		ORDER BY LSCHG_DTM
	</select>
	
	<!-- 농가 식별번호와 농장관리번호로 통합회원코드 조회 -->
	<select id="Common_selFhsMbintgInfo" parameterType="hashMap" resultType="hashMap">
		SELECT FHS_ID_NO
			 , MIN(MB_INTG_NO) AS MB_INTG_NO
		  FROM TB_LA_IS_MM_FHS A
		 WHERE FHS_ID_NO = TRIM(#{sra_fhs_id_no})
		   AND FARM_AMNNO = TRIM(#{farm_amnno})
		 GROUP BY FHS_ID_NO
	</select>
	
	<!-- 휴면회원정보 조회 -->
	<select id="Common_selDormMbintgInfo" parameterType="hashMap" resultType="hashMap">
		SELECT A.MB_INTG_NO
			 , A.DORM_DT
			 , A.MB_INTG_NM
			 , A.MB_RLNO
			 , A.OHSE_TELNO
			 , A.MB_MPNO
		<choose>
		<when test='"01".equals(mb_intg_gb)'>
			 , (SELECT COUNT(*) FROM TB_LA_IS_MM_MWMN C WHERE C.MB_INTG_NO = A.MB_INTG_NO AND C.NA_BZPLC = #{ss_na_bzplc} AND C.DEL_YN = '0') AS CUR_DORM_CNT
		</when>
		<otherwise>
			 , (SELECT COUNT(*) FROM TB_LA_IS_MM_FHS  C WHERE C.MB_INTG_NO = A.MB_INTG_NO AND C.NA_BZPLC = #{ss_na_bzplc} AND C.DEL_YN = '0') AS CUR_DORM_CNT
		</otherwise>
		</choose>
		  FROM TB_LA_IS_BK_DORM_MBINTG A
		 INNER JOIN TB_LA_IS_MM_MBINTG B
			ON (
				A.MB_INTG_NO = B.MB_INTG_NO
				AND
				B.MB_INTG_GB = #{mb_intg_gb}
			 )
		<choose>
		<when test='"02".equals(mb_intg_gb) and "1".equals(anw_yn)'>
		 WHERE A.MB_INTG_NO = (
								SELECT MIN(MB_INTG_NO) AS MB_INTG_NO
								  FROM TB_LA_IS_MM_FHS A
								 WHERE FHS_ID_NO = TRIM(#{sra_fhs_id_no})
							  )
		</when>
		<otherwise>
		 WHERE REPLACE(TRIM(A.MB_INTG_NM),' ','') = REPLACE(TRIM(DECODE(#{mb_intg_gb}, '01', TRIM(#{sra_mwmnnm}), TRIM(#{ftsnm}))),' ','')
		   AND REPLACE(TRIM(A.MB_RLNO),' ','') = DECODE(#{mb_intg_gb}, '01', REGEXP_REPLACE(TRIM(#{cus_rlno}), '[^0-9]'), REGEXP_REPLACE(TRIM(#{birth}), '[^0-9]'))
		   AND REGEXP_REPLACE(A.MB_MPNO, '[^0-9]') = REGEXP_REPLACE(TRIM(#{cus_mpno}), '[^0-9]')
		</otherwise>
		</choose>
	</select>
	
	<!-- 회원정보 저장 -->
	<insert id="Common_insMbintgInfo" parameterType="hashMap">
		<selectKey keyProperty="mb_intg_no" resultType="String" order="BEFORE">
			SELECT CASE WHEN #{mb_intg_gb} = '01' THEN NVL(MAX(MB_INTG_NO), '100000000') + 1
						ELSE NVL(MAX(MB_INTG_NO), '200000000') + 1
					END AS MB_INTG_NO
			  FROM TB_LA_IS_MM_MBINTG
			 WHERE MB_INTG_GB = #{mb_intg_gb}
		</selectKey>
		INSERT INTO TB_LA_IS_MM_MBINTG (
			MB_INTG_NO
			, MB_INTG_NM
			, MB_RLNO
			, OHSE_TELNO
			, MB_MPNO
			, DORMACC_YN
			, DORMACC_DT
			, DELACC_YN
			, DELACC_DT
			, MB_INTG_DT
			, TMS_YN
			, FNCON_DTM
			, FSRG_DTM
			, FSRGMN_ENO
			, LSCHG_DTM
			, LS_CMENO
			, MB_INTG_GB
			, DORMDUE_DT
		)
		VALUES (
			#{mb_intg_no}
			, DECODE(#{mb_intg_gb}, '01', TRIM(#{sra_mwmnnm}), TRIM(#{ftsnm}))
			, DECODE(#{mb_intg_gb}, '01', REGEXP_REPLACE(TRIM(#{cus_rlno}), '[^0-9]'), REGEXP_REPLACE(TRIM(#{birth}), '[^0-9]'))
			, TRIM(#{ohse_telno})
			, TRIM(#{cus_mpno})
			, '0'
			, NULL
			, '0'
			, NULL
			, TO_CHAR(SYSDATE, 'YYYYMMDD')
			, '0'
			, SYSDATE
			, SYSDATE
			, #{ss_eno}
			, SYSDATE
			, #{ss_eno}
			, #{mb_intg_gb}
			, TO_CHAR(SYSDATE + 365, 'YYYYMMDD')
		)
	</insert>
	
	<insert id="Common_insMbintgHisInfo" parameterType="hashMap">
		INSERT INTO TB_LA_IS_MM_MBINTGHIS (
			MB_INTG_NO
			, MB_INTG_NM
			, MB_RLNO
			, OHSE_TELNO
			, MB_MPNO
			, DORMACC_YN
			, DORMACC_DT
			, DELACC_YN
			, DELACC_DT
			, MB_INTG_DT
			, TMS_YN
			, FNCON_DTM
			, FSRG_DTM
			, FSRGMN_ENO
			, LSCHG_DTM
			, LS_CMENO
			, MB_INTG_GB
			, DORMDUE_DT
		)
		SELECT MB_INTG_NO
			 , MB_INTG_NM
			 , MB_RLNO
			 , OHSE_TELNO
			 , MB_MPNO
			 , DORMACC_YN
			 , DORMACC_DT
			 , DELACC_YN
			 , DELACC_DT
			 , MB_INTG_DT
			 , TMS_YN
			 , FNCON_DTM
			 , FSRG_DTM
			 , FSRGMN_ENO
			 , LSCHG_DTM
			 , LS_CMENO
			 , MB_INTG_GB
			 , DORMDUE_DT
		  FROM TB_LA_IS_MM_MBINTG
		 WHERE MB_INTG_NO = #{mb_intg_no}
	</insert>
	
	<!-- 휴면 처리된 데이터 복구 -->
	<update id="Common_resMbintgInfo" parameterType="hashMap">
		MERGE INTO TB_LA_IS_MM_MBINTG A
		USING (
			SELECT *
			  FROM TB_LA_IS_BK_DORM_MBINTG
			 WHERE MB_INTG_NO = #{mb_intg_no}
		) B
		   ON ( 
				A.MB_INTG_NO = B.MB_INTG_NO
				AND
				A.MB_INTG_GB = #{mb_intg_gb}
			 )
		 WHEN MATCHED THEN UPDATE
		  SET A.MB_INTG_NM = B.MB_INTG_NM
			, A.MB_RLNO = B.MB_RLNO
			, A.OHSE_TELNO = B.OHSE_TELNO
			, A.MB_MPNO = B.MB_MPNO
			, A.DORMACC_YN = '0'
			, A.DORMACC_DT = NULL
			, A.LSCHG_DTM = SYSDATE
			, A.LS_CMENO = #{ss_eno}
			, DORMDUE_DT = TO_CHAR(SYSDATE+365, 'YYYYMMDD')
	</update>
	
	<!-- 통합회원 휴면 정보 삭제 -->
	<delete id="Common_delDormMbintgInfo" parameterType="hashMap">
		DELETE TB_LA_IS_BK_DORM_MBINTG
		 WHERE MB_INTG_NO = #{mb_intg_no}
	</delete>
	
	<!-- 중도매인 정보 복구 -->
	<update id="Common_resMwmnInfo" parameterType="hashMap">
		MERGE INTO TB_LA_IS_MM_MWMN A
		USING (
			SELECT *
			  FROM TB_LA_IS_BK_DORM_MWMN
			 WHERE MB_INTG_NO = #{mb_intg_no}
		) B
		   ON (
				A.NA_BZPLC = B.NA_BZPLC
				AND
				A.TRMN_AMNNO = B.TRMN_AMNNO
				AND
				A.MB_INTG_NO = B.MB_INTG_NO
			)
		 WHEN MATCHED THEN UPDATE
		  SET A.SRA_MWMNNM = B.SRA_MWMNNM
			, A.FRLNO = B.FRLNO
			, A.ZIP = B.ZIP
			, A.DONGUP = B.DONGUP
			, A.DONGBW = B.DONGBW
			, A.OHSE_TELNO = B.OHSE_TELNO
			, A.CUS_MPNO = B.CUS_MPNO
			, A.CUS_RLNO = B.CUS_RLNO
			, A.RMK_CNTN = B.RMK_CNTN
			, A.LSCHG_DTM = SYSDATE
			, A.LS_CMENO = #{ss_userid}
	</update>
	
	<!-- 중도매인 이력 저장 -->
	<update id="Common_insMiMwmnInfo" parameterType="hashMap">
		INSERT INTO TB_LA_IS_MI_MWMN (
			NA_BZPLC
			, TRMN_AMNNO
			, MWMN_NA_TRPL_C
			, SRA_MWMNNM
			, FRLNO
			, ZIP
			, DONGUP
			, DONGBW
			, OHSE_TELNO
			, CUS_MPNO
			, MACO_YN
			, JRDWO_DSC
			, PSN_INF_OFR_AGR_YN
			, TMS_YN
			, DEL_YN
			, RMK_CNTN
			, CUS_RLNO
			, FSRG_DTM
			, FSRGMN_ENO
			, LSCHG_DTM
			, LS_CMENO
			, SMS_NO
			, SMS_YMD
			, MB_INTG_NO
		)
		SELECT NA_BZPLC
			 , TRMN_AMNNO
			 , MWMN_NA_TRPL_C
			 , SRA_MWMNNM
			 , FRLNO
			 , ZIP
			 , DONGUP
			 , DONGBW
			 , OHSE_TELNO
			 , CUS_MPNO
			 , MACO_YN
			 , JRDWO_DSC
			 , PSN_INF_OFR_AGR_YN
			 , TMS_YN
			 , DEL_YN
			 , RMK_CNTN
			 , CUS_RLNO
			 , FSRG_DTM
			 , FSRGMN_ENO
			 , LSCHG_DTM
			 , LS_CMENO
			 , SMS_NO
			 , SMS_YMD
			 , MB_INTG_NO
		  FROM TB_LA_IS_MM_MWMN
		 WHERE MB_INTG_NO = #{mb_intg_no}
	</update>
	
	<!-- 출하주 정보 복구 -->
	<update id="Common_resFhsInfo" parameterType="hashMap">
		MERGE INTO TB_LA_IS_MM_FHS A
		USING (
			SELECT *
			  FROM TB_LA_IS_BK_DORM_FHS
			 WHERE MB_INTG_NO = #{mb_intg_no}
		) B
		   ON (
				A.NA_BZPLC = B.NA_BZPLC
				AND
				A.FHS_ID_NO = B.FHS_ID_NO
				AND
				A.FARM_AMNNO = B.FARM_AMNNO
				AND
				A.MB_INTG_NO = B.MB_INTG_NO
			)
		 WHEN MATCHED THEN UPDATE
		  SET A.NA_TRPL_C = B.NA_TRPL_C
			, A.FTSNM = B.FTSNM
			, A.ZIP = B.ZIP
			, A.DONGUP = B.DONGUP
			, A.DONGBW = B.DONGBW
			, A.OHSE_TELNO = B.OHSE_TELNO
			, A.CUS_MPNO = B.CUS_MPNO
			, A.RMK_CNTN = B.RMK_CNTN
			, A.SRA_FARM_ACNO = B.SRA_FARM_ACNO
			, A.NEW_SRA_FARM_ACNO = B.NEW_SRA_FARM_ACNO
			, A.BIRTH = B.BIRTH
			, A.LSCHG_DTM = SYSDATE
			, A.LS_CMENO = #{ss_userid}
	</update>
	
	<!-- *************************************************** 통합회원 관련 [e] *************************************************** -->
	
	
	<update id="Common_insAiakInfo" parameterType="hashMap">
		/* CommonMapper.updatetIndvAiakInfo */
		MERGE INTO TB_LA_IS_MM_INDV_BLD A
		USING DUAL B
		ON(
			A.SRA_INDV_AMNNO = TRIM(#{SRA_INDV_AMNNO})
		)	
		WHEN MATCHED THEN 
			UPDATE SET                         
				MCOW_SRA_INDV_AMNNO                   =   CASE WHEN TRIM(#{MCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{MCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, FCOW_SRA_INDV_AMNNO                   =   CASE WHEN TRIM(#{FCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{FCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, GRMCOW_SRA_INDV_AMNNO                 =   CASE WHEN TRIM(#{GRMCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{GRMCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, GRFCOW_SRA_INDV_AMNNO                 =   CASE WHEN TRIM(#{GRFCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{GRFCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, MTGRMCOW_SRA_INDV_AMNNO               =   CASE WHEN TRIM(#{MTGRMCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{MTGRMCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, MTGRFCOW_SRA_INDV_AMNNO               =   CASE WHEN TRIM(#{MTGRFCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{MTGRFCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, FCOW_KPN_NO                           =   TRIM(#{FCOW_KPN_NO} )
				, GRFCOW_KPN_NO                         =   TRIM(#{GRFCOW_KPN_NO} )                        
				, MTGRFCOW_KPN_NO                       =   TRIM(#{MTGRFCOW_KPN_NO} )                      
				, EPD_VAL_1                             =   TRIM(#{EPD_VAL_1} )                           
				, EPD_GRD_1                             =   TRIM(#{EPD_GRD_1} )                           
				, EPD_VAL_2                             =   TRIM(#{EPD_VAL_2} )                           
				, EPD_GRD_2                             =   TRIM(#{EPD_GRD_2} )                           
				, EPD_VAL_3                             =   TRIM(#{EPD_VAL_3} )                           
				, EPD_GRD_3                             =   TRIM(#{EPD_GRD_3} )                           
				, EPD_VAL_4                             =   TRIM(#{EPD_VAL_4} )                           
				, EPD_GRD_4                             =   TRIM(#{EPD_GRD_4} )                           
				, LSCHG_DTM                             =   SYSDATE                                 
				, LSCHGMN_ENO                           =   #{ss_userid}                             
		WHEN NOT MATCHED THEN 
			INSERT(
				SRA_INDV_AMNNO
				, MCOW_SRA_INDV_AMNNO
				, FCOW_SRA_INDV_AMNNO
				, GRMCOW_SRA_INDV_AMNNO
				, GRFCOW_SRA_INDV_AMNNO
				, MTGRMCOW_SRA_INDV_AMNNO
				, MTGRFCOW_SRA_INDV_AMNNO
				, FCOW_KPN_NO
				, GRFCOW_KPN_NO
				, MTGRFCOW_KPN_NO
				, EPD_VAL_1
				, EPD_GRD_1
				, EPD_VAL_2
				, EPD_GRD_2
				, EPD_VAL_3
				, EPD_GRD_3
				, EPD_VAL_4
				, EPD_GRD_4
				, FSRG_DTM
				, FSRGMN_ENO
				, LSCHG_DTM
				, LSCHGMN_ENO
			)VALUES(
				TRIM(#{SRA_INDV_AMNNO} )
				, CASE WHEN TRIM(#{MCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{MCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, CASE WHEN TRIM(#{FCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{FCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, CASE WHEN TRIM(#{GRMCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{GRMCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, CASE WHEN TRIM(#{GRFCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{GRFCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, CASE WHEN TRIM(#{MTGRMCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{MTGRMCOW_SRA_INDV_AMNNO} ) ELSE NULL END
				, CASE WHEN TRIM(#{MTGRFCOW_SRA_INDV_AMNNO} ) IS NOT NULL THEN '410'||TRIM(#{MTGRFCOW_SRA_INDV_AMNNO} ) ELSE NULL END 
				, TRIM(#{FCOW_KPN_NO} )
				, TRIM(#{GRFCOW_KPN_NO} )
				, TRIM(#{MTGRFCOW_KPN_NO} )
				, TRIM(#{EPD_VAL_1} )
				, TRIM(#{EPD_GRD_1} )
				, TRIM(#{EPD_VAL_2} )
				, TRIM(#{EPD_GRD_2} )
				, TRIM(#{EPD_VAL_3} )
				, TRIM(#{EPD_GRD_3} )
				, TRIM(#{EPD_VAL_4} )
				, TRIM(#{EPD_GRD_4} )
				, SYSDATE
				, #{ss_userid}
				, SYSDATE
				, #{ss_userid}
			)
	</update>
	
	<update id="Common_insAiakPostInfo" parameterType="hashMap">
		/* CommonMapper.updatetIndvAiakPostInfo */
		MERGE INTO TB_LA_IS_MM_INDV_POSTINF A
		USING DUAL B
		ON(
			A.SRA_INDV_AMNNO = TRIM( #{SRA_INDV_AMNNO} )
			AND A.POST_SRA_INDV_AMNNO = TRIM( #{POST_SRA_INDV_AMNNO} )
		)	
		WHEN MATCHED THEN 
			UPDATE SET                                          
				MATIME                      = TRIM(#{MATIME})
				, SRA_INDV_PASG_QCN           = TRIM(#{SRA_INDV_PASG_QCN})                   
				, RG_DSC                      = TRIM(#{RG_DSC})
				, KPN_NO                      = TRIM(#{KPN_NO})                              
				, INDV_SEX_C                  = TRIM(#{INDV_SEX_C})
				, BIRTH                       = REPLACE(TRIM(#{BIRTH}),'-','')
				, METRB_BBDY_WT               = TRIM(#{METRB_BBDY_WT})
				, METRB_METQLT_GRD            = TRIM(#{METRB_METQLT_GRD})
				, MIF_BTC_DT                  = REPLACE(TRIM(#{MIF_BTC_DT}),'-','')
				, FSRG_DTM                    = SYSDATE
				, FSRGMN_ENO                  = #{ss_userid}                                    
		WHEN NOT MATCHED THEN 
			INSERT(
				SRA_INDV_AMNNO
				, POST_SRA_INDV_AMNNO
				, MATIME
				, SRA_INDV_PASG_QCN
				, RG_DSC
				, KPN_NO
				, INDV_SEX_C
				, BIRTH
				, METRB_BBDY_WT
				, METRB_METQLT_GRD
				, MIF_BTC_DT
				, FSRG_DTM
				, FSRGMN_ENO
			)VALUES(
				TRIM( #{SRA_INDV_AMNNO} )
				, TRIM( #{POST_SRA_INDV_AMNNO} )
				, TRIM( #{MATIME} )
				, TRIM( #{SRA_INDV_PASG_QCN} )
				, TRIM( #{RG_DSC} )
				, TRIM(#{KPN_NO})
				, TRIM( #{INDV_SEX_C} )
				, REPLACE(TRIM( #{BIRTH} ),'-','')
				, TRIM( #{METRB_BBDY_WT} )
				, TRIM( #{METRB_METQLT_GRD} )
				, REPLACE(TRIM( #{MIF_BTC_DT} ),'-','')
				, SYSDATE
				, #{ss_userid}
			)
	</update>
	
	<update id="Common_insAiakSibInfo" parameterType="hashMap">
		/* CommonMapper.updatetIndvAiakSibInfo */
		MERGE INTO TB_LA_IS_MM_INDV_SIBINF A
		USING DUAL B
		ON(
			A.SRA_INDV_AMNNO = TRIM( #{SRA_INDV_AMNNO} )
			AND A.SIB_SRA_INDV_AMNNO = TRIM( #{SIB_SRA_INDV_AMNNO} )
		)	
		WHEN MATCHED THEN 
			UPDATE SET                                          
				MATIME                      = TRIM( #{MATIME} )                              
				, SRA_INDV_PASG_QCN           = TRIM( #{SRA_INDV_PASG_QCN} )                   
				, RG_DSC                      = TRIM( #{RG_DSC} )
				, KPN_NO                      = TRIM(#{KPN_NO})
				, INDV_SEX_C                  = TRIM( #{INDV_SEX_C} )                          
				, BIRTH                       = REPLACE(TRIM( #{BIRTH} ),'-','')
				, METRB_BBDY_WT               = TRIM( #{METRB_BBDY_WT} )
				, METRB_METQLT_GRD            = TRIM( #{METRB_METQLT_GRD} )
				, MIF_BTC_DT                  = REPLACE(TRIM( #{MIF_BTC_DT} ),'-','')                          
				, FSRG_DTM                    = SYSDATE
				, FSRGMN_ENO                  = #{ss_userid}
		WHEN NOT MATCHED THEN 
			INSERT(
				SRA_INDV_AMNNO
				, SIB_SRA_INDV_AMNNO
				, MATIME
				, SRA_INDV_PASG_QCN
				, RG_DSC
				, KPN_NO
				, INDV_SEX_C
				, BIRTH
				, METRB_BBDY_WT
				, METRB_METQLT_GRD
				, MIF_BTC_DT
				, FSRG_DTM
				, FSRGMN_ENO
			)VALUES(
				TRIM( #{SRA_INDV_AMNNO} )
				, TRIM( #{SIB_SRA_INDV_AMNNO} )
				, TRIM( #{MATIME} )
				, TRIM( #{SRA_INDV_PASG_QCN} )
				, TRIM( #{RG_DSC} )
				, TRIM(#{KPN_NO})
				, TRIM( #{INDV_SEX_C} )
				, REPLACE(TRIM( #{BIRTH} ),'-','')
				, TRIM( #{METRB_BBDY_WT} )
				, TRIM( #{METRB_METQLT_GRD} )
				, REPLACE(TRIM( #{MIF_BTC_DT} ),'-','')
				, SYSDATE
				, #{ss_userid}
			)
	</update>
	
	<update id="Common_updIndvPostMatime" parameterType="hashMap">
		/* CommonMapper.Common_updIndvPostMatime */
		MERGE INTO TB_LA_IS_MM_INDV_POSTINF A
		USING (
			SELECT SRA_INDV_AMNNO
					, POST_SRA_INDV_AMNNO
					, MATIME
					, DENSE_RANK() over(ORDER BY SRA_INDV_AMNNO,BIRTH) NEW_MATIME
			FROM TB_LA_IS_MM_INDV_POSTINF
			WHERE SRA_INDV_AMNNO = TRIM( #{SRA_INDV_AMNNO} )
		) B
		ON(
			A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO
			AND A.POST_SRA_INDV_AMNNO = B.POST_SRA_INDV_AMNNO
		)	
		WHEN MATCHED THEN 
			UPDATE SET                                          
				A.MATIME                      = B.NEW_MATIME
	</update>
	
	
	<update id="Common_updIndvSibMatime" parameterType="hashMap">
		/* CommonMapper.Common_updIndvSibMatime */
		MERGE INTO TB_LA_IS_MM_INDV_SIBINF A
		USING (
			SELECT SRA_INDV_AMNNO
					, SIB_SRA_INDV_AMNNO
					, MATIME
					, DENSE_RANK() over(ORDER BY SRA_INDV_AMNNO,BIRTH) NEW_MATIME
			FROM TB_LA_IS_MM_INDV_SIBINF
			WHERE SRA_INDV_AMNNO = TRIM( #{SRA_INDV_AMNNO} )
		) B
		ON(
			A.SRA_INDV_AMNNO = B.SRA_INDV_AMNNO
			AND A.SIB_SRA_INDV_AMNNO = B.SIB_SRA_INDV_AMNNO
		)	
		WHEN MATCHED THEN 
			UPDATE SET                                          
				A.MATIME                      = B.NEW_MATIME
	</update>
</mapper>